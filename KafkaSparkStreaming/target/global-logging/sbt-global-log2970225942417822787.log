[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(--addPluginSbtFile=/tmp/idea.sbt, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addPluginSbtFile=/tmp/idea.sbt, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_181)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: plugins took 541.277334ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: defsScala took 0.557121ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/cloudera/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/cloudera/.sbt/1.0/plugins, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 158.76044 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.resolveProject(global-plugins) took 348.454876ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/cloudera/.sbt/1.0/plugins, plugins: List(<none>))) took 676.196992ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/cloudera/.sbt/1.0/plugins, returning: (global-plugins)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: loadedProjectsRaw took 852.287373ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: cleanEvalClasses took 0.250716ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit(file:/home/cloudera/.sbt/1.0/plugins/, ...) took 1457.298519ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: load took 3542.426066ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: resolveProjects took 48.525428ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: finalTransforms took 343.194438ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: config.delegates took 77.661207ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: Def.make(settings)... took 3694.307481ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: structureIndex took 992.123809ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: mkStreams took 8.692837ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /home/cloudera/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mUpdating [0m
[0m[[0m[0minfo[0m] [0m[0mResolved  dependencies[0m
[0m[[0m[0minfo[0m] [0m[0mFetching artifacts of [0m
[0m[[0m[0minfo[0m] [0m[0mFetched artifacts of [0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 34069.61549ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 96.097542ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.00671ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/cloudera/IdeaProjects/KafkaSparkStreaming/project[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 28.1019ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/cloudera/IdeaProjects/KafkaSparkStreaming/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 16.15319 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project kafkasparkstreaming-build from idea.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(kafkasparkstreaming-build) took 9.148009ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id kafkasparkstreaming-build, base: /home/cloudera/IdeaProjects/KafkaSparkStreaming/project, plugins: List(<none>))) took 26.08506ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/cloudera/IdeaProjects/KafkaSparkStreaming/project, returning: (kafkasparkstreaming-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 8742.747332ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 15.559793ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/home/cloudera/IdeaProjects/KafkaSparkStreaming/project/, ...) took 8855.199144ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 8856.392805ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 0.108954ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 27.271637ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 0.652812ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 322.211098ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 108.783334ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 0.004469ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /home/cloudera/IdeaProjects/KafkaSparkStreaming/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 11393.665884ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.002841ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/cloudera/IdeaProjects/KafkaSparkStreaming[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 0.222405ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/cloudera/IdeaProjects/KafkaSparkStreaming, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 4.397404 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project kafkasparkstreaming from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(kafkasparkstreaming) took 56.059182ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id kafkasparkstreaming, base: /home/cloudera/IdeaProjects/KafkaSparkStreaming, plugins: List(<none>))) took 61.436609ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/cloudera/IdeaProjects/KafkaSparkStreaming, returning: (kafkasparkstreaming)[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 2945.963128ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 6.828912ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/home/cloudera/IdeaProjects/KafkaSparkStreaming/, ...) took 14347.408959ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 14351.477038ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 1.705463ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 103.092167ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 0.734835ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 252.588885ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 52.180922ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.003981ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to KafkaStream (in build file:/home/cloudera/IdeaProjects/KafkaSparkStreaming/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
